package org.numenta.nupic.datagen;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

/**
 * Generates test data for use with KNNClassifierIntegrationTest for
 * PCAKNN short.
 * 
 * @author cogmission
 *
 */
public class PCAKNNData {
    
    private static List<Object> pcaShortList;
    static {
        pcaShortList = generateForPCAKNNShort();
    }
    
    private KNNDataArray trainData;
    private KNNDataArray testData;
    
    public PCAKNNData() {
        this.trainData = new KNNDataArray(
            (double[][])pcaShortList.get(0), (int[])pcaShortList.get(1));
        this.testData = new KNNDataArray(
            (double[][])pcaShortList.get(2), (int[])pcaShortList.get(3));
    }
    
    public static List<Object> generateForPCAKNNShort() {
        String[] files = { 
            "train_pcaknnshort_data.txt",
            "train_pcaknnshort_class.txt",
            "test_pcaknnshort_data.txt",
            "test_pcaknnshort_class.txt"
        };
        
        List<Object> retVal = new ArrayList<>();
        boolean isClass = false;
        for(String file : files) {
            String path = ResourceLocator.path(file);
            isClass = path.indexOf("class") != -1;
            
            List<String> l = null;
            try {
                l = Files.readAllLines(Paths.get(path), Charset.forName("utf-8"));
            } catch(IOException e) {
                e.printStackTrace();
            }
            
            if(isClass) {
                int[] outer = new int[l.size()];
                int i = 0;
                for(String line : l) {
                    outer[i++] = (int)Double.parseDouble(line.trim());
                }
                
                retVal.add(outer);
            }else{
                double[][] outer = new double[l.size()][];
                int i = 0;
                for(String line : l) {
                    String[] la = line.split("[\\s]+");
                    double[] dla = new double[la.length];
                    int j = 0;
                    for(String s : la) {
                        dla[j++] = Double.parseDouble(s);
                    }
                    outer[i++] = dla;
                }
                
                retVal.add(outer);
            }
        }
        
        return retVal;
    }
    
    /**
     * Returns a list of data arrays generated by the Python code
     * and saved in a file for testing exact calculations.
     * @return  list of data arrays
     */
    public KNNDataArray[] getPCAKNNShortData() {
        return new KNNDataArray[] { trainData, testData };
    }
}
